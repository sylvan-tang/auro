// Code generated by github.com/sylvan/auro/toolkits/cmd/gen-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: echo/v1/greeting_service.proto

package echov1

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"

	v1 "github.com/sylvan/auro/apis/common/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for [GreetingService.CreateGreeting][v1.GreetingService.CreateGreeting].
type CreateGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The Greeting to create.
	Greeting *Greeting `protobuf:"bytes,2,opt,name=greeting,proto3" json:"greeting,omitempty"`
}

func (x *CreateGreetingRequest) Reset() {
	*x = CreateGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreetingRequest) ProtoMessage() {}

func (x *CreateGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreetingRequest.ProtoReflect.Descriptor instead.
func (*CreateGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateGreetingRequest) GetGreeting() *Greeting {
	if x != nil {
		return x.Greeting
	}
	return nil
}

// Response message for [GreetingService.CreateGreeting][v1.GreetingService.CreateGreeting].
type CreateGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Greeting `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CreateGreetingResponse) Reset() {
	*x = CreateGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreetingResponse) ProtoMessage() {}

func (x *CreateGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreetingResponse.ProtoReflect.Descriptor instead.
func (*CreateGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateGreetingResponse) GetDetails() *Greeting {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.GetGreeting][v1.GreetingService.GetGreeting].
type GetGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The id of the Greeting in database.
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Mask specifying which fields to read.
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
}

func (x *GetGreetingRequest) Reset() {
	*x = GetGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGreetingRequest) ProtoMessage() {}

func (x *GetGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGreetingRequest.ProtoReflect.Descriptor instead.
func (*GetGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *GetGreetingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGreetingRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

// Response message for [GreetingService.GetGreeting][v1.GreetingService.GetGreeting].
type GetGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Greeting `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetGreetingResponse) Reset() {
	*x = GetGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGreetingResponse) ProtoMessage() {}

func (x *GetGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGreetingResponse.ProtoReflect.Descriptor instead.
func (*GetGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetGreetingResponse) GetDetails() *Greeting {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.UpdateGreeting][v1.GreetingService.UpdateGreeting].
type UpdateGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The Greeting which replaces the resource on the server.
	Greeting *Greeting `protobuf:"bytes,2,opt,name=greeting,proto3" json:"greeting,omitempty"`
	// Required. The update mask applies to the resource.
	// For the `FieldMask` definition, see [google.protobuf.FieldMask][google.protobuf.FieldMask].
	// Updatable fields:
	//
	//   * `id`
	//   * `update_at`
	//   * `create_at`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateGreetingRequest) Reset() {
	*x = UpdateGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreetingRequest) ProtoMessage() {}

func (x *UpdateGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreetingRequest.ProtoReflect.Descriptor instead.
func (*UpdateGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *UpdateGreetingRequest) GetGreeting() *Greeting {
	if x != nil {
		return x.Greeting
	}
	return nil
}

func (x *UpdateGreetingRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Response message for [GreetingService.UpdateGreeting][v1.GreetingService.UpdateGreeting].
type UpdateGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Greeting `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateGreetingResponse) Reset() {
	*x = UpdateGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreetingResponse) ProtoMessage() {}

func (x *UpdateGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreetingResponse.ProtoReflect.Descriptor instead.
func (*UpdateGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateGreetingResponse) GetDetails() *Greeting {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.ListGreetings][v1.GreetingService.ListGreetings].
type ListGreetingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// common list option.
	CommonOption *v1.CommonOption `protobuf:"bytes,2,opt,name=common_option,json=commonOption,proto3" json:"common_option,omitempty"`
	// common list filter.
	CommonFilter *v1.CommonFilter `protobuf:"bytes,3,opt,name=common_filter,json=commonFilter,proto3" json:"common_filter,omitempty"`
	// Mask specifying which fields to read.
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// option filter struct for list Greeting.
	OptionFilter *GreetingOptionFilter `protobuf:"bytes,5,opt,name=option_filter,json=optionFilter,proto3" json:"option_filter,omitempty"`
}

func (x *ListGreetingsRequest) Reset() {
	*x = ListGreetingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGreetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGreetingsRequest) ProtoMessage() {}

func (x *ListGreetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGreetingsRequest.ProtoReflect.Descriptor instead.
func (*ListGreetingsRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListGreetingsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListGreetingsRequest) GetCommonOption() *v1.CommonOption {
	if x != nil {
		return x.CommonOption
	}
	return nil
}

func (x *ListGreetingsRequest) GetCommonFilter() *v1.CommonFilter {
	if x != nil {
		return x.CommonFilter
	}
	return nil
}

func (x *ListGreetingsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListGreetingsRequest) GetOptionFilter() *GreetingOptionFilter {
	if x != nil {
		return x.OptionFilter
	}
	return nil
}

// Response message for [GreetingService.ListGreetings][v1.GreetingService.ListGreetings].
type ListGreetingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details *ListGreetingsResponse_Details `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ListGreetingsResponse) Reset() {
	*x = ListGreetingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGreetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGreetingsResponse) ProtoMessage() {}

func (x *ListGreetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGreetingsResponse.ProtoReflect.Descriptor instead.
func (*ListGreetingsResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListGreetingsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListGreetingsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListGreetingsResponse) GetDetails() *ListGreetingsResponse_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.DeleteGreeting][v1.GreetingService.DeleteGreeting].
type DeleteGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The resource name of the Greeting to delete.
	// Format:
	// `echos/greetings/{id}`
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGreetingRequest) Reset() {
	*x = DeleteGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetingRequest) ProtoMessage() {}

func (x *DeleteGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetingRequest.ProtoReflect.Descriptor instead.
func (*DeleteGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DeleteGreetingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for [GreetingService.DeleteGreeting][v1.GreetingService.DeleteGreeting].
type DeleteGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Greeting `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeleteGreetingResponse) Reset() {
	*x = DeleteGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetingResponse) ProtoMessage() {}

func (x *DeleteGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetingResponse.ProtoReflect.Descriptor instead.
func (*DeleteGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteGreetingResponse) GetDetails() *Greeting {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.DeleteGreetings][v1.GreetingService.DeleteGreetings].
type DeleteGreetingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// use common filter to delete Greeting
	CommonFilter *v1.CommonFilter `protobuf:"bytes,2,opt,name=common_filter,json=commonFilter,proto3" json:"common_filter,omitempty"`
	// option filter struct for delete Greeting items.
	OptionFilter *GreetingOptionFilter `protobuf:"bytes,3,opt,name=option_filter,json=optionFilter,proto3" json:"option_filter,omitempty"`
}

func (x *DeleteGreetingsRequest) Reset() {
	*x = DeleteGreetingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetingsRequest) ProtoMessage() {}

func (x *DeleteGreetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetingsRequest.ProtoReflect.Descriptor instead.
func (*DeleteGreetingsRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteGreetingsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DeleteGreetingsRequest) GetCommonFilter() *v1.CommonFilter {
	if x != nil {
		return x.CommonFilter
	}
	return nil
}

func (x *DeleteGreetingsRequest) GetOptionFilter() *GreetingOptionFilter {
	if x != nil {
		return x.OptionFilter
	}
	return nil
}

// Response message for [GreetingService.DeleteGreetings][v1.GreetingService.DeleteGreetings].
type DeleteGreetingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// deleted id list.
	Details []int64 `protobuf:"varint,3,rep,packed,name=details,proto3" json:"details,omitempty"`
}

func (x *DeleteGreetingsResponse) Reset() {
	*x = DeleteGreetingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetingsResponse) ProtoMessage() {}

func (x *DeleteGreetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetingsResponse.ProtoReflect.Descriptor instead.
func (*DeleteGreetingsResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteGreetingsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteGreetingsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteGreetingsResponse) GetDetails() []int64 {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [GreetingService.ImportGreeting][v1.GreetingService.ImportGreeting].
type ImportGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The desired input configs. The contents of all input configs will be
	// imported in one batch.
	ImportConfig *ImportGreetingConfig `protobuf:"bytes,2,opt,name=import_config,json=importConfig,proto3" json:"import_config,omitempty"`
}

func (x *ImportGreetingRequest) Reset() {
	*x = ImportGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGreetingRequest) ProtoMessage() {}

func (x *ImportGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGreetingRequest.ProtoReflect.Descriptor instead.
func (*ImportGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{12}
}

func (x *ImportGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ImportGreetingRequest) GetImportConfig() *ImportGreetingConfig {
	if x != nil {
		return x.ImportConfig
	}
	return nil
}

// Response message for [GreetingService.ImportGreeting][v1.GreetingService.ImportGreeting].
type ImportGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// success or fail.
	Details bool `protobuf:"varint,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ImportGreetingResponse) Reset() {
	*x = ImportGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGreetingResponse) ProtoMessage() {}

func (x *ImportGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGreetingResponse.ProtoReflect.Descriptor instead.
func (*ImportGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{13}
}

func (x *ImportGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ImportGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportGreetingResponse) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

// Request message for [GreetingService.ExportGreeting][v1.GreetingService.ExportGreeting].
type ExportGreetingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Greeting's parent resource, if exists.
	// Format: `echos`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The desired output location.
	ExportConfig *ExportGreetingConfig `protobuf:"bytes,2,opt,name=export_config,json=exportConfig,proto3" json:"export_config,omitempty"`
}

func (x *ExportGreetingRequest) Reset() {
	*x = ExportGreetingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportGreetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportGreetingRequest) ProtoMessage() {}

func (x *ExportGreetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportGreetingRequest.ProtoReflect.Descriptor instead.
func (*ExportGreetingRequest) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{14}
}

func (x *ExportGreetingRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ExportGreetingRequest) GetExportConfig() *ExportGreetingConfig {
	if x != nil {
		return x.ExportConfig
	}
	return nil
}

// Response message for [GreetingService.ExportGreeting][v1.GreetingService.ExportGreeting].
type ExportGreetingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// All of the files that are exported in this export operation.
	Details []string `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ExportGreetingResponse) Reset() {
	*x = ExportGreetingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportGreetingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportGreetingResponse) ProtoMessage() {}

func (x *ExportGreetingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportGreetingResponse.ProtoReflect.Descriptor instead.
func (*ExportGreetingResponse) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{15}
}

func (x *ExportGreetingResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExportGreetingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExportGreetingResponse) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

type ListGreetingsResponse_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of Greetings that matches the specified filter in the request.
	Items []*Greeting `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// next request.
	NextRequest *ListGreetingsRequest `protobuf:"bytes,2,opt,name=next_request,json=nextRequest,proto3" json:"next_request,omitempty"`
	// total items count of this filter.
	TotalCount int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListGreetingsResponse_Details) Reset() {
	*x = ListGreetingsResponse_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_echo_v1_greeting_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGreetingsResponse_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGreetingsResponse_Details) ProtoMessage() {}

func (x *ListGreetingsResponse_Details) ProtoReflect() protoreflect.Message {
	mi := &file_echo_v1_greeting_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGreetingsResponse_Details.ProtoReflect.Descriptor instead.
func (*ListGreetingsResponse_Details) Descriptor() ([]byte, []int) {
	return file_echo_v1_greeting_service_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListGreetingsResponse_Details) GetItems() []*Greeting {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListGreetingsResponse_Details) GetNextRequest() *ListGreetingsRequest {
	if x != nil {
		return x.NextRequest
	}
	return nil
}

func (x *ListGreetingsResponse_Details) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_echo_v1_greeting_service_proto protoreflect.FileDescriptor

var file_echo_v1_greeting_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x22, 0x73, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x70, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x73, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x42, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x9f, 0x02, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x95, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x73, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x73, 0x0a, 0x15,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a,
	0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x60, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x63,
	0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x60, 0x0a, 0x16, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x32, 0xdb, 0x09, 0x0a, 0x0f, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1e, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x40, 0xda, 0x41, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x67, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d,
	0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x08, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0xda, 0x41, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x69, 0x64, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x65, 0x63,
	0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x63,
	0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0xda, 0x41,
	0x1b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x38, 0x32, 0x2c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d,
	0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2f, 0x7b, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x64, 0x3d, 0x2a, 0x7d,
	0x3a, 0x08, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x81, 0x01, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x65,
	0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x63,
	0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8a,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1e, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x37, 0xda, 0x41, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x69, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x2a, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x12, 0x7d, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f,
	0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x32, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x0e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e,
	0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0xda, 0x41, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x23, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73,
	0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x3a, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0xa4, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0xda, 0x41, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x2c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x3d, 0x65, 0x63, 0x68, 0x6f, 0x73, 0x7d, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x3a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x3a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1e, 0xca, 0x41, 0x1b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x2f, 0x61,
	0x75, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x2f, 0x61, 0x75,
	0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x76, 0x31, 0x3b,
	0x65, 0x63, 0x68, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_echo_v1_greeting_service_proto_rawDescOnce sync.Once
	file_echo_v1_greeting_service_proto_rawDescData = file_echo_v1_greeting_service_proto_rawDesc
)

func file_echo_v1_greeting_service_proto_rawDescGZIP() []byte {
	file_echo_v1_greeting_service_proto_rawDescOnce.Do(func() {
		file_echo_v1_greeting_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_echo_v1_greeting_service_proto_rawDescData)
	})
	return file_echo_v1_greeting_service_proto_rawDescData
}

var file_echo_v1_greeting_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_echo_v1_greeting_service_proto_goTypes = []interface{}{
	(*CreateGreetingRequest)(nil),         // 0: echo.v1.CreateGreetingRequest
	(*CreateGreetingResponse)(nil),        // 1: echo.v1.CreateGreetingResponse
	(*GetGreetingRequest)(nil),            // 2: echo.v1.GetGreetingRequest
	(*GetGreetingResponse)(nil),           // 3: echo.v1.GetGreetingResponse
	(*UpdateGreetingRequest)(nil),         // 4: echo.v1.UpdateGreetingRequest
	(*UpdateGreetingResponse)(nil),        // 5: echo.v1.UpdateGreetingResponse
	(*ListGreetingsRequest)(nil),          // 6: echo.v1.ListGreetingsRequest
	(*ListGreetingsResponse)(nil),         // 7: echo.v1.ListGreetingsResponse
	(*DeleteGreetingRequest)(nil),         // 8: echo.v1.DeleteGreetingRequest
	(*DeleteGreetingResponse)(nil),        // 9: echo.v1.DeleteGreetingResponse
	(*DeleteGreetingsRequest)(nil),        // 10: echo.v1.DeleteGreetingsRequest
	(*DeleteGreetingsResponse)(nil),       // 11: echo.v1.DeleteGreetingsResponse
	(*ImportGreetingRequest)(nil),         // 12: echo.v1.ImportGreetingRequest
	(*ImportGreetingResponse)(nil),        // 13: echo.v1.ImportGreetingResponse
	(*ExportGreetingRequest)(nil),         // 14: echo.v1.ExportGreetingRequest
	(*ExportGreetingResponse)(nil),        // 15: echo.v1.ExportGreetingResponse
	(*ListGreetingsResponse_Details)(nil), // 16: echo.v1.ListGreetingsResponse.Details
	(*Greeting)(nil),                      // 17: echo.v1.Greeting
	(*fieldmaskpb.FieldMask)(nil),         // 18: google.protobuf.FieldMask
	(*v1.CommonOption)(nil),               // 19: common.v1.CommonOption
	(*v1.CommonFilter)(nil),               // 20: common.v1.CommonFilter
	(*GreetingOptionFilter)(nil),          // 21: echo.v1.GreetingOptionFilter
	(*ImportGreetingConfig)(nil),          // 22: echo.v1.ImportGreetingConfig
	(*ExportGreetingConfig)(nil),          // 23: echo.v1.ExportGreetingConfig
}
var file_echo_v1_greeting_service_proto_depIdxs = []int32{
	17, // 0: echo.v1.CreateGreetingRequest.greeting:type_name -> echo.v1.Greeting
	17, // 1: echo.v1.CreateGreetingResponse.details:type_name -> echo.v1.Greeting
	18, // 2: echo.v1.GetGreetingRequest.read_mask:type_name -> google.protobuf.FieldMask
	17, // 3: echo.v1.GetGreetingResponse.details:type_name -> echo.v1.Greeting
	17, // 4: echo.v1.UpdateGreetingRequest.greeting:type_name -> echo.v1.Greeting
	18, // 5: echo.v1.UpdateGreetingRequest.update_mask:type_name -> google.protobuf.FieldMask
	17, // 6: echo.v1.UpdateGreetingResponse.details:type_name -> echo.v1.Greeting
	19, // 7: echo.v1.ListGreetingsRequest.common_option:type_name -> common.v1.CommonOption
	20, // 8: echo.v1.ListGreetingsRequest.common_filter:type_name -> common.v1.CommonFilter
	18, // 9: echo.v1.ListGreetingsRequest.read_mask:type_name -> google.protobuf.FieldMask
	21, // 10: echo.v1.ListGreetingsRequest.option_filter:type_name -> echo.v1.GreetingOptionFilter
	16, // 11: echo.v1.ListGreetingsResponse.details:type_name -> echo.v1.ListGreetingsResponse.Details
	17, // 12: echo.v1.DeleteGreetingResponse.details:type_name -> echo.v1.Greeting
	20, // 13: echo.v1.DeleteGreetingsRequest.common_filter:type_name -> common.v1.CommonFilter
	21, // 14: echo.v1.DeleteGreetingsRequest.option_filter:type_name -> echo.v1.GreetingOptionFilter
	22, // 15: echo.v1.ImportGreetingRequest.import_config:type_name -> echo.v1.ImportGreetingConfig
	23, // 16: echo.v1.ExportGreetingRequest.export_config:type_name -> echo.v1.ExportGreetingConfig
	17, // 17: echo.v1.ListGreetingsResponse.Details.items:type_name -> echo.v1.Greeting
	6,  // 18: echo.v1.ListGreetingsResponse.Details.next_request:type_name -> echo.v1.ListGreetingsRequest
	0,  // 19: echo.v1.GreetingService.CreateGreeting:input_type -> echo.v1.CreateGreetingRequest
	2,  // 20: echo.v1.GreetingService.GetGreeting:input_type -> echo.v1.GetGreetingRequest
	4,  // 21: echo.v1.GreetingService.UpdateGreeting:input_type -> echo.v1.UpdateGreetingRequest
	6,  // 22: echo.v1.GreetingService.ListGreetings:input_type -> echo.v1.ListGreetingsRequest
	8,  // 23: echo.v1.GreetingService.DeleteGreeting:input_type -> echo.v1.DeleteGreetingRequest
	10, // 24: echo.v1.GreetingService.DeleteGreetings:input_type -> echo.v1.DeleteGreetingsRequest
	12, // 25: echo.v1.GreetingService.ImportGreeting:input_type -> echo.v1.ImportGreetingRequest
	14, // 26: echo.v1.GreetingService.ExportGreeting:input_type -> echo.v1.ExportGreetingRequest
	1,  // 27: echo.v1.GreetingService.CreateGreeting:output_type -> echo.v1.CreateGreetingResponse
	3,  // 28: echo.v1.GreetingService.GetGreeting:output_type -> echo.v1.GetGreetingResponse
	5,  // 29: echo.v1.GreetingService.UpdateGreeting:output_type -> echo.v1.UpdateGreetingResponse
	7,  // 30: echo.v1.GreetingService.ListGreetings:output_type -> echo.v1.ListGreetingsResponse
	9,  // 31: echo.v1.GreetingService.DeleteGreeting:output_type -> echo.v1.DeleteGreetingResponse
	11, // 32: echo.v1.GreetingService.DeleteGreetings:output_type -> echo.v1.DeleteGreetingsResponse
	13, // 33: echo.v1.GreetingService.ImportGreeting:output_type -> echo.v1.ImportGreetingResponse
	15, // 34: echo.v1.GreetingService.ExportGreeting:output_type -> echo.v1.ExportGreetingResponse
	27, // [27:35] is the sub-list for method output_type
	19, // [19:27] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_echo_v1_greeting_service_proto_init() }
func file_echo_v1_greeting_service_proto_init() {
	if File_echo_v1_greeting_service_proto != nil {
		return
	}
	file_echo_v1_greeting_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_echo_v1_greeting_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGreetingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGreetingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportGreetingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportGreetingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_echo_v1_greeting_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGreetingsResponse_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_echo_v1_greeting_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_echo_v1_greeting_service_proto_goTypes,
		DependencyIndexes: file_echo_v1_greeting_service_proto_depIdxs,
		MessageInfos:      file_echo_v1_greeting_service_proto_msgTypes,
	}.Build()
	File_echo_v1_greeting_service_proto = out.File
	file_echo_v1_greeting_service_proto_rawDesc = nil
	file_echo_v1_greeting_service_proto_goTypes = nil
	file_echo_v1_greeting_service_proto_depIdxs = nil
}
