// Code generated by github.com/sylvan/auro/toolkits/cmd/gen-proto. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: assoc/v1/assoc_service.proto

package assocv1

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"

	v1 "github.com/sylvan/auro/apis/common/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// type of association, type should be defined in pair, eg:
//  ASSOC_TYPE_TAGBY = 1;
//  ASSOC_TYPE_TAGTO = 2;
type AssocType int32

const (
	AssocType_ASSOC_TYPE_UNSPECIFIED AssocType = 0
	// an object taged by a tag.
	AssocType_ASSOC_TYPE_TAGBY AssocType = 1
	// a tag taged to an object.
	AssocType_ASSOC_TYPE_TAGTO AssocType = 2
	// an object created by a user.
	AssocType_ASSOC_TYPE_CREATED_BY AssocType = 3
	// a user created an object.
	AssocType_ASSOC_TYPE_CREATED_WITH AssocType = 4
	// a child object inherit from parent object.
	AssocType_ASSOC_TYPE_INHERIT_FROM AssocType = 5
	// an object extend to child object
	AssocType_ASSOC_TYPE_EXTEND_TO AssocType = 6
	// an history version flow of itself, to_id is the version generated with timestamp.
	AssocType_ASSOC_TYPE_FLOW_HISTORY AssocType = 7
	// version of an flow, from_id is the generated by backend when an object has a new version, to_id is the id of this flow.
	AssocType_ASSOC_TYPE_HISTORY_FLOW AssocType = 8
)

// Enum value maps for AssocType.
var (
	AssocType_name = map[int32]string{
		0: "ASSOC_TYPE_UNSPECIFIED",
		1: "ASSOC_TYPE_TAGBY",
		2: "ASSOC_TYPE_TAGTO",
		3: "ASSOC_TYPE_CREATED_BY",
		4: "ASSOC_TYPE_CREATED_WITH",
		5: "ASSOC_TYPE_INHERIT_FROM",
		6: "ASSOC_TYPE_EXTEND_TO",
		7: "ASSOC_TYPE_FLOW_HISTORY",
		8: "ASSOC_TYPE_HISTORY_FLOW",
	}
	AssocType_value = map[string]int32{
		"ASSOC_TYPE_UNSPECIFIED":  0,
		"ASSOC_TYPE_TAGBY":        1,
		"ASSOC_TYPE_TAGTO":        2,
		"ASSOC_TYPE_CREATED_BY":   3,
		"ASSOC_TYPE_CREATED_WITH": 4,
		"ASSOC_TYPE_INHERIT_FROM": 5,
		"ASSOC_TYPE_EXTEND_TO":    6,
		"ASSOC_TYPE_FLOW_HISTORY": 7,
		"ASSOC_TYPE_HISTORY_FLOW": 8,
	}
)

func (x AssocType) Enum() *AssocType {
	p := new(AssocType)
	*p = x
	return p
}

func (x AssocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssocType) Descriptor() protoreflect.EnumDescriptor {
	return file_assoc_v1_assoc_service_proto_enumTypes[0].Descriptor()
}

func (AssocType) Type() protoreflect.EnumType {
	return &file_assoc_v1_assoc_service_proto_enumTypes[0]
}

func (x AssocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssocType.Descriptor instead.
func (AssocType) EnumDescriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{0}
}

// Request message for [AssocService.CreateAssoc][v1.AssocService.CreateAssoc].
type CreateAssocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Assoc's parent resource, if exists.
	// Format : ``
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The Assoc to create.
	Assoc *Assoc `protobuf:"bytes,2,opt,name=assoc,proto3" json:"assoc,omitempty"`
}

func (x *CreateAssocRequest) Reset() {
	*x = CreateAssocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssocRequest) ProtoMessage() {}

func (x *CreateAssocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssocRequest.ProtoReflect.Descriptor instead.
func (*CreateAssocRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAssocRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateAssocRequest) GetAssoc() *Assoc {
	if x != nil {
		return x.Assoc
	}
	return nil
}

// Response message for [AssocService.CreateAssoc][v1.AssocService.CreateAssoc].
type CreateAssocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Assoc `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CreateAssocResponse) Reset() {
	*x = CreateAssocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssocResponse) ProtoMessage() {}

func (x *CreateAssocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssocResponse.ProtoReflect.Descriptor instead.
func (*CreateAssocResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssocResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateAssocResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateAssocResponse) GetDetails() *Assoc {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [AssocService.UpdateAssoc][v1.AssocService.UpdateAssoc].
type UpdateAssocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId int64     `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId   int64     `protobuf:"varint,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	AType  AssocType `protobuf:"varint,3,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
	Assoc  *Assoc    `protobuf:"bytes,4,opt,name=assoc,proto3" json:"assoc,omitempty"`
	// Required. The update mask applies to the resource.
	// For the `FieldMask` definition, see [google.protobuf.FieldMask][google.protobuf.FieldMask].
	// Updatable fields:
	//
	//   * `id`
	//   * `update_at`
	//   * `create_at`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAssocRequest) Reset() {
	*x = UpdateAssocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssocRequest) ProtoMessage() {}

func (x *UpdateAssocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssocRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssocRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAssocRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *UpdateAssocRequest) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *UpdateAssocRequest) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

func (x *UpdateAssocRequest) GetAssoc() *Assoc {
	if x != nil {
		return x.Assoc
	}
	return nil
}

func (x *UpdateAssocRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Response message for [AssocService.UpdateAssoc][v1.AssocService.UpdateAssoc].
type UpdateAssocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Assoc `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateAssocResponse) Reset() {
	*x = UpdateAssocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssocResponse) ProtoMessage() {}

func (x *UpdateAssocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssocResponse.ProtoReflect.Descriptor instead.
func (*UpdateAssocResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAssocResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateAssocResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateAssocResponse) GetDetails() *Assoc {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [AssocService.ListAssocs][v1.AssocService.ListAssocs].
type ListAssocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Assoc's parent resource, if exists.
	// Format : ``
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// common list option.
	CommonOption *v1.CommonOption `protobuf:"bytes,2,opt,name=common_option,json=commonOption,proto3" json:"common_option,omitempty"`
	// common list filter.
	CommonFilter *v1.CommonFilter `protobuf:"bytes,3,opt,name=common_filter,json=commonFilter,proto3" json:"common_filter,omitempty"`
	// Mask specifying which fields to read.
	ReadMask *fieldmaskpb.FieldMask `protobuf:"bytes,4,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	// option filter struct for list Assoc.
	OptionFilter *AssocOptionFilter `protobuf:"bytes,5,opt,name=option_filter,json=optionFilter,proto3" json:"option_filter,omitempty"`
}

func (x *ListAssocsRequest) Reset() {
	*x = ListAssocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssocsRequest) ProtoMessage() {}

func (x *ListAssocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssocsRequest.ProtoReflect.Descriptor instead.
func (*ListAssocsRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListAssocsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListAssocsRequest) GetCommonOption() *v1.CommonOption {
	if x != nil {
		return x.CommonOption
	}
	return nil
}

func (x *ListAssocsRequest) GetCommonFilter() *v1.CommonFilter {
	if x != nil {
		return x.CommonFilter
	}
	return nil
}

func (x *ListAssocsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

func (x *ListAssocsRequest) GetOptionFilter() *AssocOptionFilter {
	if x != nil {
		return x.OptionFilter
	}
	return nil
}

// Response message for [AssocService.ListAssocs][v1.AssocService.ListAssocs].
type ListAssocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details *ListAssocsResponse_Details `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ListAssocsResponse) Reset() {
	*x = ListAssocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssocsResponse) ProtoMessage() {}

func (x *ListAssocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssocsResponse.ProtoReflect.Descriptor instead.
func (*ListAssocsResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListAssocsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListAssocsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListAssocsResponse) GetDetails() *ListAssocsResponse_Details {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [AssocService.DeleteAssoc][v1.AssocService.DeleteAssoc].
type DeleteAssocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId int64     `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId   int64     `protobuf:"varint,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	AType  AssocType `protobuf:"varint,3,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
}

func (x *DeleteAssocRequest) Reset() {
	*x = DeleteAssocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssocRequest) ProtoMessage() {}

func (x *DeleteAssocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssocRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssocRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAssocRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *DeleteAssocRequest) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *DeleteAssocRequest) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

// Response message for [AssocService.DeleteAssoc][v1.AssocService.DeleteAssoc].
type DeleteAssocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// response data.
	Details *Assoc `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DeleteAssocResponse) Reset() {
	*x = DeleteAssocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssocResponse) ProtoMessage() {}

func (x *DeleteAssocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssocResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssocResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAssocResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAssocResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAssocResponse) GetDetails() *Assoc {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [AssocService.DeleteAssocs][v1.AssocService.DeleteAssocs].
type DeleteAssocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The path of the Assoc's parent resource, if exists.
	// Format : ``
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// use common filter to delete Assoc
	CommonFilter *v1.CommonFilter `protobuf:"bytes,2,opt,name=common_filter,json=commonFilter,proto3" json:"common_filter,omitempty"`
	// option filter struct for delete Assoc items.
	OptionFilter *AssocOptionFilter `protobuf:"bytes,3,opt,name=option_filter,json=optionFilter,proto3" json:"option_filter,omitempty"`
}

func (x *DeleteAssocsRequest) Reset() {
	*x = DeleteAssocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssocsRequest) ProtoMessage() {}

func (x *DeleteAssocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssocsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssocsRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAssocsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DeleteAssocsRequest) GetCommonFilter() *v1.CommonFilter {
	if x != nil {
		return x.CommonFilter
	}
	return nil
}

func (x *DeleteAssocsRequest) GetOptionFilter() *AssocOptionFilter {
	if x != nil {
		return x.OptionFilter
	}
	return nil
}

// Response message for [AssocService.DeleteAssocs][v1.AssocService.DeleteAssocs].
type DeleteAssocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// deleted id list.
	Details []int64 `protobuf:"varint,3,rep,packed,name=details,proto3" json:"details,omitempty"`
}

func (x *DeleteAssocsResponse) Reset() {
	*x = DeleteAssocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAssocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssocsResponse) ProtoMessage() {}

func (x *DeleteAssocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssocsResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssocsResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAssocsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteAssocsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteAssocsResponse) GetDetails() []int64 {
	if x != nil {
		return x.Details
	}
	return nil
}

// Request message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
type CountAssocsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId int64     `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	AType  AssocType `protobuf:"varint,2,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
}

func (x *CountAssocsRequest) Reset() {
	*x = CountAssocsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssocsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssocsRequest) ProtoMessage() {}

func (x *CountAssocsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssocsRequest.ProtoReflect.Descriptor instead.
func (*CountAssocsRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{10}
}

func (x *CountAssocsRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *CountAssocsRequest) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

// Response message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
type CountAssocsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// deleted id list.
	Details int64 `protobuf:"varint,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CountAssocsResponse) Reset() {
	*x = CountAssocsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAssocsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAssocsResponse) ProtoMessage() {}

func (x *CountAssocsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAssocsResponse.ProtoReflect.Descriptor instead.
func (*CountAssocsResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{11}
}

func (x *CountAssocsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CountAssocsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CountAssocsResponse) GetDetails() int64 {
	if x != nil {
		return x.Details
	}
	return 0
}

// Request message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
type GetAssocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId int64     `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	AType  AssocType `protobuf:"varint,2,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
	ToId   int64     `protobuf:"varint,3,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
}

func (x *GetAssocRequest) Reset() {
	*x = GetAssocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssocRequest) ProtoMessage() {}

func (x *GetAssocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssocRequest.ProtoReflect.Descriptor instead.
func (*GetAssocRequest) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAssocRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *GetAssocRequest) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

func (x *GetAssocRequest) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

// Response message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
type GetAssocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status code.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// deleted id list.
	Details *Assoc `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetAssocResponse) Reset() {
	*x = GetAssocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssocResponse) ProtoMessage() {}

func (x *GetAssocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssocResponse.ProtoReflect.Descriptor instead.
func (*GetAssocResponse) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAssocResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAssocResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAssocResponse) GetDetails() *Assoc {
	if x != nil {
		return x.Details
	}
	return nil
}

type Assoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// auto increase id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Output only. Timestamp when this Dataset was created, convert to local timezone string.
	CreateAt string `protobuf:"bytes,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// Output only. Timestamp when this Dataset was last updated, convert to local timezone string.
	UpdateAt string    `protobuf:"bytes,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	FromId   int64     `protobuf:"varint,4,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId     int64     `protobuf:"varint,5,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	AType    AssocType `protobuf:"varint,6,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
	Meta     string    `protobuf:"bytes,7,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Assoc) Reset() {
	*x = Assoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assoc) ProtoMessage() {}

func (x *Assoc) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assoc.ProtoReflect.Descriptor instead.
func (*Assoc) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{14}
}

func (x *Assoc) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Assoc) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *Assoc) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

func (x *Assoc) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *Assoc) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *Assoc) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

func (x *Assoc) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

type AssocOptionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromId int64     `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	AType  AssocType `protobuf:"varint,2,opt,name=a_type,json=aType,proto3,enum=assoc.v1.AssocType" json:"a_type,omitempty"`
	ToIds  []int64   `protobuf:"varint,3,rep,packed,name=to_ids,json=toIds,proto3" json:"to_ids,omitempty"`
}

func (x *AssocOptionFilter) Reset() {
	*x = AssocOptionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssocOptionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssocOptionFilter) ProtoMessage() {}

func (x *AssocOptionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssocOptionFilter.ProtoReflect.Descriptor instead.
func (*AssocOptionFilter) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{15}
}

func (x *AssocOptionFilter) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *AssocOptionFilter) GetAType() AssocType {
	if x != nil {
		return x.AType
	}
	return AssocType_ASSOC_TYPE_UNSPECIFIED
}

func (x *AssocOptionFilter) GetToIds() []int64 {
	if x != nil {
		return x.ToIds
	}
	return nil
}

type ListAssocsResponse_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of Assocs that matches the specified filter in the request.
	Items       []*Assoc           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextRequest *ListAssocsRequest `protobuf:"bytes,2,opt,name=next_request,json=nextRequest,proto3" json:"next_request,omitempty"`
	// total items count of this filter.
	TotalCount int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAssocsResponse_Details) Reset() {
	*x = ListAssocsResponse_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_assoc_v1_assoc_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssocsResponse_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssocsResponse_Details) ProtoMessage() {}

func (x *ListAssocsResponse_Details) ProtoReflect() protoreflect.Message {
	mi := &file_assoc_v1_assoc_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssocsResponse_Details.ProtoReflect.Descriptor instead.
func (*ListAssocsResponse_Details) Descriptor() ([]byte, []int) {
	return file_assoc_v1_assoc_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListAssocsResponse_Details) GetItems() []*Assoc {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListAssocsResponse_Details) GetNextRequest() *ListAssocsRequest {
	if x != nil {
		return x.NextRequest
	}
	return nil
}

func (x *ListAssocsResponse_Details) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_assoc_v1_assoc_service_proto protoreflect.FileDescriptor

var file_assoc_v1_assoc_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x52, 0x05, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x22, 0x6e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x06, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x05, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x6e, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa2, 0x02,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x06, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6e, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0c, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f,
	0x49, 0x64, 0x22, 0x6b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0xfa, 0x01, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x3a, 0x39, 0xea, 0x41, 0x36, 0x0a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x2e, 0x61, 0x75, 0x72, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x0b, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x22, 0x6f, 0x0a, 0x11,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x2a, 0xfc, 0x01,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x41,
	0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x53, 0x53, 0x4f, 0x43,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x42, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x54,
	0x4f, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x10, 0x03, 0x12, 0x1b,
	0x0a, 0x17, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x41,
	0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x48, 0x45, 0x52, 0x49,
	0x54, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x53, 0x53, 0x4f,
	0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x4f,
	0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x07, 0x12,
	0x1b, 0x0a, 0x17, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x49,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x08, 0x32, 0xe7, 0x06, 0x0a,
	0x0c, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x12, 0x1c, 0x2e, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0xda, 0x41, 0x0c, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x2c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x3a, 0x05, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x12, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x32, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x73, 0x2f, 0x7b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d,
	0x2f, 0x7b, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x7b, 0x74, 0x6f, 0x5f,
	0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x12, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x73, 0x2f, 0x7b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x7b,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x7b, 0x74, 0x6f, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x64, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x73, 0x12, 0x1d, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x32, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x73, 0x2f, 0x7b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x3d, 0x2a, 0x7d, 0x2f, 0x7b, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x12, 0x76,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x12, 0x19, 0x2e, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x73, 0x2f, 0x7b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x3d, 0x2a,
	0x7d, 0x2f, 0x7b, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x2a, 0x7d, 0x2f, 0x7b, 0x74, 0x6f,
	0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x1a, 0x1e, 0xca, 0x41, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x2f, 0x61, 0x75, 0x72,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6c, 0x76, 0x61, 0x6e, 0x2f, 0x61, 0x75, 0x72, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_assoc_v1_assoc_service_proto_rawDescOnce sync.Once
	file_assoc_v1_assoc_service_proto_rawDescData = file_assoc_v1_assoc_service_proto_rawDesc
)

func file_assoc_v1_assoc_service_proto_rawDescGZIP() []byte {
	file_assoc_v1_assoc_service_proto_rawDescOnce.Do(func() {
		file_assoc_v1_assoc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_assoc_v1_assoc_service_proto_rawDescData)
	})
	return file_assoc_v1_assoc_service_proto_rawDescData
}

var file_assoc_v1_assoc_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_assoc_v1_assoc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_assoc_v1_assoc_service_proto_goTypes = []interface{}{
	(AssocType)(0),                     // 0: assoc.v1.AssocType
	(*CreateAssocRequest)(nil),         // 1: assoc.v1.CreateAssocRequest
	(*CreateAssocResponse)(nil),        // 2: assoc.v1.CreateAssocResponse
	(*UpdateAssocRequest)(nil),         // 3: assoc.v1.UpdateAssocRequest
	(*UpdateAssocResponse)(nil),        // 4: assoc.v1.UpdateAssocResponse
	(*ListAssocsRequest)(nil),          // 5: assoc.v1.ListAssocsRequest
	(*ListAssocsResponse)(nil),         // 6: assoc.v1.ListAssocsResponse
	(*DeleteAssocRequest)(nil),         // 7: assoc.v1.DeleteAssocRequest
	(*DeleteAssocResponse)(nil),        // 8: assoc.v1.DeleteAssocResponse
	(*DeleteAssocsRequest)(nil),        // 9: assoc.v1.DeleteAssocsRequest
	(*DeleteAssocsResponse)(nil),       // 10: assoc.v1.DeleteAssocsResponse
	(*CountAssocsRequest)(nil),         // 11: assoc.v1.CountAssocsRequest
	(*CountAssocsResponse)(nil),        // 12: assoc.v1.CountAssocsResponse
	(*GetAssocRequest)(nil),            // 13: assoc.v1.GetAssocRequest
	(*GetAssocResponse)(nil),           // 14: assoc.v1.GetAssocResponse
	(*Assoc)(nil),                      // 15: assoc.v1.Assoc
	(*AssocOptionFilter)(nil),          // 16: assoc.v1.AssocOptionFilter
	(*ListAssocsResponse_Details)(nil), // 17: assoc.v1.ListAssocsResponse.Details
	(*fieldmaskpb.FieldMask)(nil),      // 18: google.protobuf.FieldMask
	(*v1.CommonOption)(nil),            // 19: common.v1.CommonOption
	(*v1.CommonFilter)(nil),            // 20: common.v1.CommonFilter
}
var file_assoc_v1_assoc_service_proto_depIdxs = []int32{
	15, // 0: assoc.v1.CreateAssocRequest.assoc:type_name -> assoc.v1.Assoc
	15, // 1: assoc.v1.CreateAssocResponse.details:type_name -> assoc.v1.Assoc
	0,  // 2: assoc.v1.UpdateAssocRequest.a_type:type_name -> assoc.v1.AssocType
	15, // 3: assoc.v1.UpdateAssocRequest.assoc:type_name -> assoc.v1.Assoc
	18, // 4: assoc.v1.UpdateAssocRequest.update_mask:type_name -> google.protobuf.FieldMask
	15, // 5: assoc.v1.UpdateAssocResponse.details:type_name -> assoc.v1.Assoc
	19, // 6: assoc.v1.ListAssocsRequest.common_option:type_name -> common.v1.CommonOption
	20, // 7: assoc.v1.ListAssocsRequest.common_filter:type_name -> common.v1.CommonFilter
	18, // 8: assoc.v1.ListAssocsRequest.read_mask:type_name -> google.protobuf.FieldMask
	16, // 9: assoc.v1.ListAssocsRequest.option_filter:type_name -> assoc.v1.AssocOptionFilter
	17, // 10: assoc.v1.ListAssocsResponse.details:type_name -> assoc.v1.ListAssocsResponse.Details
	0,  // 11: assoc.v1.DeleteAssocRequest.a_type:type_name -> assoc.v1.AssocType
	15, // 12: assoc.v1.DeleteAssocResponse.details:type_name -> assoc.v1.Assoc
	20, // 13: assoc.v1.DeleteAssocsRequest.common_filter:type_name -> common.v1.CommonFilter
	16, // 14: assoc.v1.DeleteAssocsRequest.option_filter:type_name -> assoc.v1.AssocOptionFilter
	0,  // 15: assoc.v1.CountAssocsRequest.a_type:type_name -> assoc.v1.AssocType
	0,  // 16: assoc.v1.GetAssocRequest.a_type:type_name -> assoc.v1.AssocType
	15, // 17: assoc.v1.GetAssocResponse.details:type_name -> assoc.v1.Assoc
	0,  // 18: assoc.v1.Assoc.a_type:type_name -> assoc.v1.AssocType
	0,  // 19: assoc.v1.AssocOptionFilter.a_type:type_name -> assoc.v1.AssocType
	15, // 20: assoc.v1.ListAssocsResponse.Details.items:type_name -> assoc.v1.Assoc
	5,  // 21: assoc.v1.ListAssocsResponse.Details.next_request:type_name -> assoc.v1.ListAssocsRequest
	1,  // 22: assoc.v1.AssocService.CreateAssoc:input_type -> assoc.v1.CreateAssocRequest
	3,  // 23: assoc.v1.AssocService.UpdateAssoc:input_type -> assoc.v1.UpdateAssocRequest
	5,  // 24: assoc.v1.AssocService.ListAssocs:input_type -> assoc.v1.ListAssocsRequest
	7,  // 25: assoc.v1.AssocService.DeleteAssoc:input_type -> assoc.v1.DeleteAssocRequest
	9,  // 26: assoc.v1.AssocService.DeleteAssocs:input_type -> assoc.v1.DeleteAssocsRequest
	11, // 27: assoc.v1.AssocService.CountAssocs:input_type -> assoc.v1.CountAssocsRequest
	13, // 28: assoc.v1.AssocService.GetAssoc:input_type -> assoc.v1.GetAssocRequest
	2,  // 29: assoc.v1.AssocService.CreateAssoc:output_type -> assoc.v1.CreateAssocResponse
	4,  // 30: assoc.v1.AssocService.UpdateAssoc:output_type -> assoc.v1.UpdateAssocResponse
	6,  // 31: assoc.v1.AssocService.ListAssocs:output_type -> assoc.v1.ListAssocsResponse
	8,  // 32: assoc.v1.AssocService.DeleteAssoc:output_type -> assoc.v1.DeleteAssocResponse
	10, // 33: assoc.v1.AssocService.DeleteAssocs:output_type -> assoc.v1.DeleteAssocsResponse
	12, // 34: assoc.v1.AssocService.CountAssocs:output_type -> assoc.v1.CountAssocsResponse
	14, // 35: assoc.v1.AssocService.GetAssoc:output_type -> assoc.v1.GetAssocResponse
	29, // [29:36] is the sub-list for method output_type
	22, // [22:29] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_assoc_v1_assoc_service_proto_init() }
func file_assoc_v1_assoc_service_proto_init() {
	if File_assoc_v1_assoc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_assoc_v1_assoc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAssocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAssocsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAssocsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssocOptionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_assoc_v1_assoc_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssocsResponse_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_assoc_v1_assoc_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_assoc_v1_assoc_service_proto_goTypes,
		DependencyIndexes: file_assoc_v1_assoc_service_proto_depIdxs,
		EnumInfos:         file_assoc_v1_assoc_service_proto_enumTypes,
		MessageInfos:      file_assoc_v1_assoc_service_proto_msgTypes,
	}.Build()
	File_assoc_v1_assoc_service_proto = out.File
	file_assoc_v1_assoc_service_proto_rawDesc = nil
	file_assoc_v1_assoc_service_proto_goTypes = nil
	file_assoc_v1_assoc_service_proto_depIdxs = nil
}
