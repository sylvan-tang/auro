// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// AssocDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type AssocDao struct {
	gmvc.M               // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB       // DB is the raw underlying database management object.
	Table   string       // Table is the table name of the DAO.
	Columns assocColumns // Columns contains all the columns of Table that for convenient usage.
}

// AssocColumns defines and stores column names for table assoc.
type assocColumns struct {
	Id       string // 自增ID，主键
	CreateAt string // 创建时间
	UpdateAt string // 更新时间
	Entity   string // assoc proto 结构内数据
	FromId   string // proto 中的字段，直接映射出来做联合主建使用,source_id
	ToId     string // proto 中的字段，直接映射出来做联合主建使用,destination_id
	AType    string // proto 中的字段，直接映射出来做联合主建使用
}

func NewAssocDao() *AssocDao {
	return &AssocDao{
		M:     g.DB("assoc").Model("assoc").Safe(),
		DB:    g.DB("assoc"),
		Table: "assoc",
		Columns: assocColumns{
			Id:       "id",
			CreateAt: "create_at",
			UpdateAt: "update_at",
			Entity:   "entity",
			FromId:   "from_id",
			ToId:     "to_id",
			AType:    "a_type",
		},
	}
}
