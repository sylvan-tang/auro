// Code generated by github.com/sylvan/auro/toolkits/cmd/gen-proto. DO NOT EDIT.
syntax = "proto3";

package assoc.v1;

import "common/v1/types.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/sylvan/auro/apis/assoc/v1;assocv1";

// The service that handles the CRUD of Assoc.
service AssocService {
  option (google.api.default_host) = "github.com/sylvan/auro/apis";
  // Creates a Assoc.
  rpc CreateAssoc(CreateAssocRequest) returns (CreateAssocResponse) {
    option (google.api.http) = {
      post: "/v1/assocs"
      body: "assoc"
    };
    option (google.api.method_signature) = "parent,assoc";
  }

  // Updates a Assoc.
  rpc UpdateAssoc(UpdateAssocRequest) returns (UpdateAssocResponse) {
    option (google.api.http) = {
      patch: "/v1/assocs/{from_id=*}/{a_type=*}/{to_id=*}"
      body: "*"
    };
  }

  // Lists Assocs in a Location.
  rpc ListAssocs(ListAssocsRequest) returns (ListAssocsResponse) {
    option (google.api.http) = {
      // use post for list request body, add /resources in the end of path to diff from create Assoc rpc.
      post: "/v1/assocs/resources"
      body: "*"
    };
  }

  // Deletes a Assoc.
  rpc DeleteAssoc(DeleteAssocRequest) returns (DeleteAssocResponse) {
    option (google.api.http) = {
      delete: "/v1/assocs/{from_id=*}/{a_type=*}/{to_id}"
    };
  }

  // Batch delete Assoc by filter.
  rpc DeleteAssocs(DeleteAssocsRequest) returns (DeleteAssocsResponse) {
    option (google.api.http) = {
      patch: "/v1/assocs"
      body: "*"
    };
  }

  rpc CountAssocs(CountAssocsRequest) returns (CountAssocsResponse) {
    option (google.api.http) = {
      get: "/v1/assocs/{from_id=*}/{a_type=*}"
    };
  }

  rpc GetAssoc(GetAssocRequest) returns (GetAssocResponse) {
    option (google.api.http) = {
      get: "/v1/assocs/{from_id=*}/{a_type=*}/{to_id=*}"
    };
  }
}

// Request message for [AssocService.CreateAssoc][v1.AssocService.CreateAssoc].
message CreateAssocRequest {
  // The path of the Assoc's parent resource, if exists.
  // Format : ``
  string parent = 1;

  // Required. The Assoc to create.
  Assoc assoc = 2;
}

// Response message for [AssocService.CreateAssoc][v1.AssocService.CreateAssoc].
message CreateAssocResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // response data.
  Assoc details = 3;
}

// Request message for [AssocService.UpdateAssoc][v1.AssocService.UpdateAssoc].
message UpdateAssocRequest {
  int64 from_id = 1;

  int64 to_id = 2;

  AssocType a_type = 3;

  Assoc assoc = 4;

  // Required. The update mask applies to the resource.
  // For the `FieldMask` definition, see [google.protobuf.FieldMask][google.protobuf.FieldMask].
  // Updatable fields:
  //
  //   * `id`
  //   * `update_at`
  //   * `create_at`
  google.protobuf.FieldMask update_mask = 5;
}

// Response message for [AssocService.UpdateAssoc][v1.AssocService.UpdateAssoc].
message UpdateAssocResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // response data.
  Assoc details = 3;
}

// Request message for [AssocService.ListAssocs][v1.AssocService.ListAssocs].
message ListAssocsRequest {
  // The path of the Assoc's parent resource, if exists.
  // Format : ``
  string parent = 1;

  // common list option.
  common.v1.CommonOption common_option = 2;

  // common list filter.
  common.v1.CommonFilter common_filter = 3;

  // Mask specifying which fields to read.
  google.protobuf.FieldMask read_mask = 4;

  // option filter struct for list Assoc.
  AssocOptionFilter option_filter = 5;
}

// Response message for [AssocService.ListAssocs][v1.AssocService.ListAssocs].
message ListAssocsResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  message Details {
    // A list of Assocs that matches the specified filter in the request.
    repeated Assoc items = 1;

    ListAssocsRequest next_request = 2;
    // total items count of this filter.
    int32 total_count = 3;
  }
  Details details = 3;
}

// Request message for [AssocService.DeleteAssoc][v1.AssocService.DeleteAssoc].
message DeleteAssocRequest {
  int64 from_id = 1;

  int64 to_id = 2;

  AssocType a_type = 3;
}

// Response message for [AssocService.DeleteAssoc][v1.AssocService.DeleteAssoc].
message DeleteAssocResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // response data.
  Assoc details = 3;
}

// Request message for [AssocService.DeleteAssocs][v1.AssocService.DeleteAssocs].
message DeleteAssocsRequest {
  // The path of the Assoc's parent resource, if exists.
  // Format : ``
  string parent = 1;

  // use common filter to delete Assoc
  common.v1.CommonFilter common_filter = 2;

  // option filter struct for delete Assoc items.
  AssocOptionFilter option_filter = 3;
}

// Response message for [AssocService.DeleteAssocs][v1.AssocService.DeleteAssocs].
message DeleteAssocsResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // deleted id list.
  repeated int64 details = 3;
}

// Request message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
message CountAssocsRequest {
  int64 from_id = 1;
  AssocType a_type = 2;
}

// Response message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
message CountAssocsResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // deleted id list.
  int64 details = 3;
}

// Request message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
message GetAssocRequest {
  int64 from_id = 1;
  AssocType a_type = 2;
  int64 to_id = 3;
}

// Response message for [AssocService.CountAssocs][v1.AssocService.CountAssocs].
message GetAssocResponse {
  // status code.
  int32 code = 1;
  // error message.
  string message = 2;
  // deleted id list.
  Assoc details = 3;
}

message Assoc {
  option (google.api.resource) = {
    type: "github.com.sylvan.auro.apis/AssocEntity"
    pattern: "assocs/{id}"
  };
  // auto increase id.
  int64 id = 1;

  // Output only. Timestamp when this Dataset was created, convert to local timezone string.
  string create_at = 2;

  // Output only. Timestamp when this Dataset was last updated, convert to local timezone string.
  string update_at = 3;

  int64 from_id = 4;

  int64 to_id = 5;

  AssocType a_type = 6;

  string meta = 7;
}

// type of association, type should be defined in pair, eg:
//  ASSOC_TYPE_TAGBY = 1;
//  ASSOC_TYPE_TAGTO = 2;
enum AssocType {
  ASSOC_TYPE_UNSPECIFIED = 0;

  // an object taged by a tag.
  ASSOC_TYPE_TAGBY = 1;
  // a tag taged to an object.
  ASSOC_TYPE_TAGTO = 2;

  // an object created by a user.
  ASSOC_TYPE_CREATED_BY = 3;
  // a user created an object.
  ASSOC_TYPE_CREATED_WITH = 4;

  // a child object inherit from parent object.
  ASSOC_TYPE_INHERIT_FROM = 5;
  // an object extend to child object
  ASSOC_TYPE_EXTEND_TO = 6;

  // an history version flow of itself, to_id is the version generated with timestamp.
  ASSOC_TYPE_FLOW_HISTORY = 7;
  // version of an flow, from_id is the generated by backend when an object has a new version, to_id is the id of this flow.
  ASSOC_TYPE_HISTORY_FLOW = 8;
}

message AssocOptionFilter {
  int64 from_id = 1;

  AssocType a_type = 2;

  repeated int64 to_ids = 3;
}
