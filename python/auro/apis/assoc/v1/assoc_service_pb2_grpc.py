# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ...assoc.v1 import assoc_service_pb2 as assoc_dot_v1_dot_assoc__service__pb2


class AssocServiceStub(object):
    """The service that handles the CRUD of Assoc.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAssoc = channel.unary_unary(
                '/assoc.v1.AssocService/CreateAssoc',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.CreateAssocRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.CreateAssocResponse.FromString,
                )
        self.UpdateAssoc = channel.unary_unary(
                '/assoc.v1.AssocService/UpdateAssoc',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocResponse.FromString,
                )
        self.ListAssocs = channel.unary_unary(
                '/assoc.v1.AssocService/ListAssocs',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.ListAssocsRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.ListAssocsResponse.FromString,
                )
        self.DeleteAssoc = channel.unary_unary(
                '/assoc.v1.AssocService/DeleteAssoc',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocResponse.FromString,
                )
        self.DeleteAssocs = channel.unary_unary(
                '/assoc.v1.AssocService/DeleteAssocs',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsResponse.FromString,
                )
        self.CountAssocs = channel.unary_unary(
                '/assoc.v1.AssocService/CountAssocs',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.CountAssocsRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.CountAssocsResponse.FromString,
                )
        self.GetAssoc = channel.unary_unary(
                '/assoc.v1.AssocService/GetAssoc',
                request_serializer=assoc_dot_v1_dot_assoc__service__pb2.GetAssocRequest.SerializeToString,
                response_deserializer=assoc_dot_v1_dot_assoc__service__pb2.GetAssocResponse.FromString,
                )


class AssocServiceServicer(object):
    """The service that handles the CRUD of Assoc.
    """

    def CreateAssoc(self, request, context):
        """Creates a Assoc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAssoc(self, request, context):
        """Updates a Assoc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAssocs(self, request, context):
        """Lists Assocs in a Location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAssoc(self, request, context):
        """Deletes a Assoc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAssocs(self, request, context):
        """Batch delete Assoc by filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountAssocs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssocServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAssoc': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAssoc,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.CreateAssocRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.CreateAssocResponse.SerializeToString,
            ),
            'UpdateAssoc': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAssoc,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocResponse.SerializeToString,
            ),
            'ListAssocs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAssocs,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.ListAssocsRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.ListAssocsResponse.SerializeToString,
            ),
            'DeleteAssoc': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAssoc,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocResponse.SerializeToString,
            ),
            'DeleteAssocs': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAssocs,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsResponse.SerializeToString,
            ),
            'CountAssocs': grpc.unary_unary_rpc_method_handler(
                    servicer.CountAssocs,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.CountAssocsRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.CountAssocsResponse.SerializeToString,
            ),
            'GetAssoc': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssoc,
                    request_deserializer=assoc_dot_v1_dot_assoc__service__pb2.GetAssocRequest.FromString,
                    response_serializer=assoc_dot_v1_dot_assoc__service__pb2.GetAssocResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'assoc.v1.AssocService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssocService(object):
    """The service that handles the CRUD of Assoc.
    """

    @staticmethod
    def CreateAssoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/CreateAssoc',
            assoc_dot_v1_dot_assoc__service__pb2.CreateAssocRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.CreateAssocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAssoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/UpdateAssoc',
            assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.UpdateAssocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAssocs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/ListAssocs',
            assoc_dot_v1_dot_assoc__service__pb2.ListAssocsRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.ListAssocsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAssoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/DeleteAssoc',
            assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAssocs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/DeleteAssocs',
            assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.DeleteAssocsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CountAssocs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/CountAssocs',
            assoc_dot_v1_dot_assoc__service__pb2.CountAssocsRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.CountAssocsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assoc.v1.AssocService/GetAssoc',
            assoc_dot_v1_dot_assoc__service__pb2.GetAssocRequest.SerializeToString,
            assoc_dot_v1_dot_assoc__service__pb2.GetAssocResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
