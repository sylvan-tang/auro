/*
 * This file is generated by jOOQ.
 */
package com.sylvan.auro.persistence.jooq.tables.records;

import com.sylvan.auro.persistence.jooq.tables.GlobalLock;
import javax.annotation.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

/** 全局锁表 */
@Generated(
    value = {"http://www.jooq.org", "jOOQ version:3.11.12"},
    comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class GlobalLockRecord extends UpdatableRecordImpl<GlobalLockRecord>
    implements Record6<Integer, String, String, Long, Long, Long> {

  private static final long serialVersionUID = 1268893694;

  /** Setter for <code>global_lock.id</code>. 自增 ID */
  public GlobalLockRecord setId(Integer value) {
    set(0, value);
    return this;
  }

  /** Getter for <code>global_lock.id</code>. 自增 ID */
  public Integer getId() {
    return (Integer) get(0);
  }

  /** Setter for <code>global_lock.key</code>. 锁 */
  public GlobalLockRecord setKey(String value) {
    set(1, value);
    return this;
  }

  /** Getter for <code>global_lock.key</code>. 锁 */
  public String getKey() {
    return (String) get(1);
  }

  /** Setter for <code>global_lock.holder</code>. 持有者 */
  public GlobalLockRecord setHolder(String value) {
    set(2, value);
    return this;
  }

  /** Getter for <code>global_lock.holder</code>. 持有者 */
  public String getHolder() {
    return (String) get(2);
  }

  /** Setter for <code>global_lock.expire_ms</code>. 锁失效时间，单位为毫秒，默认 -1 代表永久有效 */
  public GlobalLockRecord setExpireMs(Long value) {
    set(3, value);
    return this;
  }

  /** Getter for <code>global_lock.expire_ms</code>. 锁失效时间，单位为毫秒，默认 -1 代表永久有效 */
  public Long getExpireMs() {
    return (Long) get(3);
  }

  /** Setter for <code>global_lock.created_at</code>. 创建时间 */
  public GlobalLockRecord setCreatedAt(Long value) {
    set(4, value);
    return this;
  }

  /** Getter for <code>global_lock.created_at</code>. 创建时间 */
  public Long getCreatedAt() {
    return (Long) get(4);
  }

  /** Setter for <code>global_lock.updated_at</code>. 最后修改时间 */
  public GlobalLockRecord setUpdatedAt(Long value) {
    set(5, value);
    return this;
  }

  /** Getter for <code>global_lock.updated_at</code>. 最后修改时间 */
  public Long getUpdatedAt() {
    return (Long) get(5);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /** {@inheritDoc} */
  @Override
  public Record1<Integer> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  /** {@inheritDoc} */
  @Override
  public Row6<Integer, String, String, Long, Long, Long> fieldsRow() {
    return (Row6) super.fieldsRow();
  }

  /** {@inheritDoc} */
  @Override
  public Row6<Integer, String, String, Long, Long, Long> valuesRow() {
    return (Row6) super.valuesRow();
  }

  /** {@inheritDoc} */
  @Override
  public Field<Integer> field1() {
    return GlobalLock.GLOBAL_LOCK.ID;
  }

  /** {@inheritDoc} */
  @Override
  public Field<String> field2() {
    return GlobalLock.GLOBAL_LOCK.KEY;
  }

  /** {@inheritDoc} */
  @Override
  public Field<String> field3() {
    return GlobalLock.GLOBAL_LOCK.HOLDER;
  }

  /** {@inheritDoc} */
  @Override
  public Field<Long> field4() {
    return GlobalLock.GLOBAL_LOCK.EXPIRE_MS;
  }

  /** {@inheritDoc} */
  @Override
  public Field<Long> field5() {
    return GlobalLock.GLOBAL_LOCK.CREATED_AT;
  }

  /** {@inheritDoc} */
  @Override
  public Field<Long> field6() {
    return GlobalLock.GLOBAL_LOCK.UPDATED_AT;
  }

  /** {@inheritDoc} */
  @Override
  public Integer component1() {
    return getId();
  }

  /** {@inheritDoc} */
  @Override
  public String component2() {
    return getKey();
  }

  /** {@inheritDoc} */
  @Override
  public String component3() {
    return getHolder();
  }

  /** {@inheritDoc} */
  @Override
  public Long component4() {
    return getExpireMs();
  }

  /** {@inheritDoc} */
  @Override
  public Long component5() {
    return getCreatedAt();
  }

  /** {@inheritDoc} */
  @Override
  public Long component6() {
    return getUpdatedAt();
  }

  /** {@inheritDoc} */
  @Override
  public Integer value1() {
    return getId();
  }

  /** {@inheritDoc} */
  @Override
  public String value2() {
    return getKey();
  }

  /** {@inheritDoc} */
  @Override
  public String value3() {
    return getHolder();
  }

  /** {@inheritDoc} */
  @Override
  public Long value4() {
    return getExpireMs();
  }

  /** {@inheritDoc} */
  @Override
  public Long value5() {
    return getCreatedAt();
  }

  /** {@inheritDoc} */
  @Override
  public Long value6() {
    return getUpdatedAt();
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value1(Integer value) {
    setId(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value2(String value) {
    setKey(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value3(String value) {
    setHolder(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value4(Long value) {
    setExpireMs(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value5(Long value) {
    setCreatedAt(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord value6(Long value) {
    setUpdatedAt(value);
    return this;
  }

  /** {@inheritDoc} */
  @Override
  public GlobalLockRecord values(
      Integer value1, String value2, String value3, Long value4, Long value5, Long value6) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached GlobalLockRecord */
  public GlobalLockRecord() {
    super(GlobalLock.GLOBAL_LOCK);
  }

  /** Create a detached, initialised GlobalLockRecord */
  public GlobalLockRecord(
      Integer id, String key, String holder, Long expireMs, Long createdAt, Long updatedAt) {
    super(GlobalLock.GLOBAL_LOCK);

    set(0, id);
    set(1, key);
    set(2, holder);
    set(3, expireMs);
    set(4, createdAt);
    set(5, updatedAt);
  }
}
